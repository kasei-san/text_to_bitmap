# encoding: utf-8
require "bdf"

describe Bdf do
  subject{ described_class.instance }

  let(:binaly_arrays){
    [
      #123456789012345678901234567890123456789012345678
      '000000000001000010001000000000000000000000000000',
      '000000000000100010001000000000001000000000000000',
      '000000000000111111111111000000001000000000000000',
      '000000000000000010001000000000001000000000000000',
      '000000000100000000000000000000001000000000000000',
      '001111000010001111111110001111001011100000111000',
      '010000100010001000100010010000101100010001000100',
      '000000100000001000100010000000101000001010000010',
      '001111100000101111111110001111101000001010000000',
      '010000100000100000100000010000101000001010000000',
      '100000100001001111111100100000101000001010000000',
      '100000100001000000100000100000101000001010000010',
      '100001100010011111111111100001101100010001000100',
      '011110100010000001010000011110101011100000111000',
      '000000000100000110001100000000000000000000000000',
      '000000000100011000000011000000000000000000000000'
    ]
  }

  it 'Bdf is singleton class' do
    expect(Bdf.instance.object_id).to eq Bdf.instance.object_id
  end

  describe '.string_to_bdf' do
    it 'change string to binaly arrays' do
      expect(subject.string_to_bdf('a漢abc').map(&:join)).to eq binaly_arrays
    end

    it 'String.to_bdf too' do
      expect('a漢abc'.to_bdf.map{|line| line.join}).to eq binaly_arrays
    end
  end
end
